%% Takahashi's proof of Church-Rosser using complete developments
%% Masako Takahashi, "Parallel reduction in lambda-calculus",
%%   Information and Computation 118(1), April 1995.
%%
%% Abella proof contributed by Randy Pollack
%% simplified by AM to conform to ORBI's spec

Specification "cr".

Define xpcdR : olist -> olist -> olist -> prop by
  xpcdR nil nil nil ;
  nabla x, xpcdR (is_tm x :: L) (pr1 x x :: K) (cd1 x x :: notabs x :: J) :=
    xpcdR L K J.

Define name : tm -> prop by
  nabla x, name x.

%% properties of correct contexts
Theorem is_tm_worlds : forall L K J E,
  xpcdR L K J -> member E L ->
  exists A, E = is_tm A /\
    name A /\ member (pr1 A A) K /\ member (cd1 A A) J /\
      member (notabs A) J.
induction on 2. intros. case H2.
  case H1. search.
  case H1. apply IH to H4 H3. search.

Theorem pr1_worlds : forall L K J E,
  xpcdR L K J -> member E K ->
  exists A B, E = pr1 A B /\
    name A /\ A = B /\ member (is_tm A) L /\
     member (cd1 A B) J /\ member (notabs A) J.
induction on 2. intros. case H2.
  case H1. search.
  case H1. apply IH to H4 H3. search.

Theorem cd_worlds : forall L K J E,
  xpcdR L K J -> member E J ->
   (exists A B, E = cd1 A B /\
     name A /\ A = B /\ member (is_tm A) L /\
       member (pr1 A A) K /\ member (notabs A) J)
\/ (exists A, E = notabs A /\
     name A /\ member (is_tm A) L /\ member (pr1 A A) K /\
       member (cd1 A A) J).
induction on 2. intros. case H2.
  case H1. search.
  case H1. case H3. 
    right. search.
    apply IH to H4 H5. case H6.
      search. search.

%% The meaning of "notabs" is as expected
Theorem notabs_abs_absurd: forall A L K J,
   xpcdR L K J -> {J |- notabs (abs A)} -> false.
intros. case H2.
  apply cd_worlds to H1 H4. case H5.
    case H3. case H3. case H6.

% {J |- cd1 A B} implies A is a term
Theorem cd1_is_tm : forall A B L K J,
  xpcdR L K J -> {J |- cd1 A B} -> {L |- is_tm A}.
induction on 2. intros. case H2.
  apply IH to H1 H4. apply IH to H1 H5. search.
  apply IH to _ H3. search.
  apply IH to H1 H3. apply IH to H1 H4. search.
  apply cd_worlds to H1 H4. case H5.
   case H3. search.
   case H3.

% similarly, {K |- pr1 A B} implies A is a term
Theorem pr1_is_tm : forall A B L K J,
  xpcdR L K J -> {K |- pr1 A B} -> {L |- is_tm A}.
induction on 2. intros. case H2.
  apply IH to H1 H3. apply IH to H1 H4. search.
  apply IH to _ H3. search.
  apply IH to H1 H3. apply IH to H1 H4. search.
  apply pr1_worlds to H1 H4. case H3. search.

%% now to show pr1 has diamond property (Takahashi proof, using cd1)

%% There is a cd1 step from every is_tm
Theorem cd1_exists : forall A L K J,
  xpcdR L K J -> {L |- is_tm A} -> exists B, {J |- cd1 A B}.
induction on 2. intros. case H2.
  % app
  apply IH to H1 H3. apply IH to H1 H4. case H3.
    search.
    apply IH to _ H7. search.
    apply is_tm_worlds to H1 H8. case H7. search.

  % abs
  apply IH to _ H3. search.

  % variable
  apply is_tm_worlds to H1 H4. case H3. search.

%% inversion lemmas about the shape of pr1 steps
Theorem pr1_name: forall A B L K J,
     xpcdR L K J -> {K |- pr1 A B} -> name A -> B = A.
intros. case H3. case H2.
  apply pr1_worlds to H1 H5. case H4. search.

Theorem pr1_abs: forall R B L K J,
  xpcdR L K J -> {K |- pr1 (abs R) B} -> exists S, B = (abs S).
intros. case H2.
  search.
  apply pr1_worlds to H1 H4. case H5. case H3.

Theorem pre_pr1_subst_lem: forall A1 A2 B1 B2 L K J, nabla x,
  xpcdR L K J -> {K, pr1 x x |- pr1 (A1 x) (A2 x)} -> {K |- pr1 B1 B2} ->
         {K |- pr1 (A1 B1) (A2 B2)}.
induction on 2. intros. case H2.
  apply IH to H1 H4 H3. apply IH to H1 H5 H3. search.
  apply IH to _ H4 H3. search.
  apply IH to H1 H4 H3. apply IH to H1 H5 H3. search.
  case H5.
    case H4. search.
    apply pr1_worlds to H1 H6. case H4. case H7.
      search.
      search.

Theorem pr1_subst_lem: forall A1 A2 B1 B2 L K J,
 xpcdR L K J ->
    {K |- pr1 (abs A1) (abs A2)} -> {K |- pr1 B1 B2} ->
         {K |- pr1 (A1 B1) (A2 B2)}.
intros. case H2.
  apply pre_pr1_subst_lem to H1 H4 H3. search.
  apply pr1_worlds to H1 H5. case H4. case H6.

%% The key lemma that allows to show that pr1 has the diamond
%% property.
Theorem cd1_pr1_triangle : forall A B C L K J,
     xpcdR L K J -> {K |- pr1 A B} -> {J |- cd1 A C} -> {K |- pr1 B C}.
induction on 3. intros. case H3.

  % cd1 app
  case H2.
    apply IH to H1 H7 H5. apply IH to H1 H8 H6. search.
    apply notabs_abs_absurd to H1 H4.
    apply pr1_worlds to H1 H8. case H9. case H7.

  % cd1 abs
  case H2.
    apply IH to _ H5 H4. search.
    apply pr1_worlds to H1 H6. case H7. case H5.

  % cd1 contract
  case H2.
    case H6. 
      apply IH to H1 H7 H5. apply IH to H1 _ H4. search.
      apply pr1_worlds to H1 H9. case H10. case H8.
    apply IH to H1 H7 H5. apply IH to H1 _ H4.
      apply pr1_subst_lem to H1 H9 H8. search.
    apply pr1_worlds to H1 H7. case H8. case H6.

  % cd1 var
  apply cd_worlds to H1 H5. case H6.
    case H4. apply pr1_name to H1 H2 H7. search.
    case H4.

%% The main result
Theorem pr1_diamond : forall A B1 B2 L K J,
   xpcdR L K J -> {K |- pr1 A B1} -> {K |- pr1 A B2} ->
        exists C, {K |- pr1 B1 C} /\ {K |- pr1 B2 C}.
intros.
apply pr1_is_tm to H1 H2. apply cd1_exists to H1 H4.
apply cd1_pr1_triangle to H1 H2 H5. apply cd1_pr1_triangle to H1 H3 H5.
search.
