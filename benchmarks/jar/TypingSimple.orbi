%% Syntax
tp: type.
i: tp.
arr: tp -> tp -> tp.

tm: type.
app: tm -> tm -> tm.
lam: tp -> (tm -> tm) -> tm.

%% Judgments
oft: tm -> tp -> type.

%% Rules
oft_l: ({x:tm} oft x A -> oft (M x) B) ->
       oft (lam A (\x. M x)) (arr A B).
oft_a: oft M (arr A B) -> oft N A -> oft (app M N) B.

%% Schemas
schema xtG = some [t:tp] block (x:tm, u:oft x t);

%{
%% Theorems
theorem tyUniq: {h:xtG}{M:tm}{A:tp}{B:tp}
  [h |- oft M A] -> [h |- oft M B] -> A = B.

%% Directives
% [hy] explicit x in xtG.
%}